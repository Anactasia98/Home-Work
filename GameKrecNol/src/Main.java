import java.util.Scanner;

//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class Main {
    public static void pechetayetArr(char[] arr){
        for (int i = 0; i < arr.length; i++) {
            if (arr[i]=='4'||arr[i]=='7'){
                System.out.print("\n-----");
            }
            if (arr[i]=='4' || arr[i]=='7' ) {
                System.out.println();
            }
            System.out.print(arr[i] + "|");
        }
    }
    public static void main(String[] args) {
//Задание: Реализация игры "Крестики-нолики"
//
//Цель: Создать программу на выбранном вами языке программирования для игры в "Крестики-нолики" с использованием статического массива, циклов и условных операторов (if),методов и т.д.
// Игра должна быть оформлена в консоли с красивым выводом игрового поля.
//
//Требования и условия:
//
//1. Человек против человека
//Создайте игровое поле в виде статического двумерного массива размером 3x3 , либо оспользовать одномерный массив на 9 элементов.
//Каждый ход игрока:
//Выводите текущее состояние игрового поля.
//Запрашивайте у пользователя координаты для хода (номер строки и столбца) (в одномерном массиве номер квадратика).
//Проверьте корректность хода:
//Если ячейка занята, запросите ввод заново.
//Если координаты вне игрового поля, запросите ввод заново.
//Определите условия победы:
//Проверка наличия трех одинаковых символов (X или O) по строкам, столбцам или диагоналям.
//Если никто не победил, а поле заполнено, игра заканчивается ничьей.
//Оформите вывод в консоли так, чтобы игровое поле отображалось красиво.
//
//
//2. Человек против компьютера
//Реализуйте логику игрового поля так же, как в первом варианте.
//Добавьте возможность игры против компьютера:
//Игрок делает ход первым (за X).
//После хода игрока компьютер выбирает случайную свободную клетку для своего хода (за O).
//После каждого хода:
//Проверяйте условия победы.
//Если поле заполнено, игра заканчивается ничьей.
//Убедитесь, что компьютер не делает ход в занятую клетку.
//
//
//
//
//3. Человек против компьютера (Hard Mode)
//Реализуйте игровую логику аналогично предыдущему пункту.
//Внесите улучшения для компьютера:
//Приоритетное блокирование: Если у игрока есть возможность выиграть на следующем ходу, компьютер должен занять соответствующую клетку, чтобы заблокировать победу.
//Умный ход: Если у компьютера есть возможность выиграть на своем ходу, он должен использовать эту возможность.
//Если выигрышных или блокирующих ходов нет, компьютер ходит в первую свободную клетку (или случайным образом).
//Общие требования:
//Для хранения игрового поля используйте статический массив размером 3x3.
//Логику ходов реализуйте с помощью циклов и условных операторов (if).
//Красиво оформите консольный вывод:
//Игровое поле должно быть наглядным и обновляться после каждого хода.
//Например:
//markdown
//
//
//Отображение в случаи двумерного массива
//    0   1   2
//
// 0  1 | X | O
//    ---------
// 1  O | X |
//    ---------
// 2    |   | X
//Программа должна проверять ввод пользователя на корректность (например, не позволять ставить символ в занятую клетку или вводить некорректные координаты).
//
//
// Отображение в случаи одномерного массива
//1 | 2 | 3
//---------
//4 | 5 | 6
//---------
//7 | 8 | 9
//Программа должна проверять ввод пользователя на корректность (например, не позволять ставить символ в занятую клетку или вводить некорректные координаты).
//
//
//Критерии оценки:
//Корректная реализация логики игры.
//Выполнение всех трех режимов.
//Понятный и красивый вывод на консоль.
//Проверка на ошибки ввода (например, ввод за пределами поля или ход в занятую клетку)
//        char[] arr= {'1','|','2','|','3',
//                     '4','|','5','|','6',
//                     '7','|','8','|','9'};
        char[] arr= {'1','2','3',
                     '4','5','6',
                     '7','8','9'};
      pechetayetArr(arr);
//        for (int i = 0; i < arr.length; i++) {
//            if (arr[i]=='4'||arr[i]=='7'){
//                System.out.print("\n-----");
//            }
//            if (arr[i]=='4' || arr[i]=='7' ) {
//                System.out.println();
//            }
//            System.out.print(arr[i] + "|");
//        }
        Scanner scanner=new Scanner(System.in);
        System.out.println();
        System.out.println("Введите номер квадрата");
        char num = scanner.next().charAt(0);

//        for (int i = 0; i < arr.length; i++) {
//            char num = scanner.next().charAt(0);
//            if (arr[i]==num){
//                arr[i]='X';
//            }
//            pechetayetArr(arr);
//        }


































































    }
}